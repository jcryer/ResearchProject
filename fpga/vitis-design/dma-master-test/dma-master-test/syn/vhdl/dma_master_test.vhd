-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dma_master_test is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of dma_master_test is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dma_master_test_dma_master_test,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.600700,HLS_SYN_LAT=676,HLS_SYN_TPT=none,HLS_SYN_MEM=11,HLS_SYN_DSP=0,HLS_SYN_FF=20045,HLS_SYN_LUT=29224,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (94 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (94 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (94 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (94 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (94 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (94 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (94 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (94 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (94 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (94 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (94 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_49742402 : STD_LOGIC_VECTOR (31 downto 0) := "01001001011101000010010000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_202 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_BF800000 : STD_LOGIC_VECTOR (31 downto 0) := "10111111100000000000000000000000";
    constant ap_const_lv32_3FC00000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111110000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv65_19999999A : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000110011001100110011001100110011010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_5F3759DF : STD_LOGIC_VECTOR (31 downto 0) := "01011111001101110101100111011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal arr : STD_LOGIC_VECTOR (63 downto 0);
    signal num_quads : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal buff_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal buff_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal buff_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_563 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_573 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_596 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_fu_505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_606 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal grp_fu_509_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_618 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_513_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_627 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_635 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_642 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_649 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_656 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal grp_fu_484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_667 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_488_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_680 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_693 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal num_quads_read_reg_1049 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_reg_1067 : STD_LOGIC_VECTOR (61 downto 0);
    signal gmem_addr_reg_1074 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal dz_reg_1109 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln43_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_1142 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln43_fu_725_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln43_reg_1146 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_fu_736_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal mult_fu_756_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mult_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal add_ln135_fu_762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln135_reg_1163 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln135_1_fu_768_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln135_1_reg_1168 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln135_2_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln135_2_reg_1173 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln136_fu_780_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln136_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln136_1_fu_786_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln136_1_reg_1183 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln137_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln137_reg_1188 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal add_ln135_3_fu_825_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln135_3_reg_1208 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln136_2_fu_848_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln136_2_reg_1223 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln137_1_fu_862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln137_1_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_reg_1238 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal tmp_34_reg_1243 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_35_reg_1248 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_37_reg_1258 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_38_reg_1263 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_40_reg_1273 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_36_reg_1298 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_39_reg_1313 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_41_reg_1323 : STD_LOGIC_VECTOR (29 downto 0);
    signal buff_4_load_1_reg_1333 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_1_load_1_reg_1344 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_load_1_reg_1349 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_reg_1359 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_2_load_1_reg_1364 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal grp_fu_535_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul42_reg_1369 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul43_reg_1374 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_543_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul44_reg_1379 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp37_reg_1384 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp38_reg_1389 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_500_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp39_reg_1394 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln15_fu_1038_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln15_reg_1399 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal bitcast_ln15_fu_1044_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln15_reg_1404 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_ce0 : STD_LOGIC;
    signal buff_we0 : STD_LOGIC;
    signal buff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_ce1 : STD_LOGIC;
    signal buff_we1 : STD_LOGIC;
    signal buff_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_1_ce0 : STD_LOGIC;
    signal buff_1_we0 : STD_LOGIC;
    signal buff_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_1_ce1 : STD_LOGIC;
    signal buff_1_we1 : STD_LOGIC;
    signal buff_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_2_ce0 : STD_LOGIC;
    signal buff_2_we0 : STD_LOGIC;
    signal buff_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_2_ce1 : STD_LOGIC;
    signal buff_2_we1 : STD_LOGIC;
    signal buff_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_3_ce0 : STD_LOGIC;
    signal buff_3_we0 : STD_LOGIC;
    signal buff_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_3_ce1 : STD_LOGIC;
    signal buff_3_we1 : STD_LOGIC;
    signal buff_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_4_ce0 : STD_LOGIC;
    signal buff_4_we0 : STD_LOGIC;
    signal buff_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_4_ce1 : STD_LOGIC;
    signal buff_4_we1 : STD_LOGIC;
    signal t_finals_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_finals_ce0 : STD_LOGIC;
    signal t_finals_we0 : STD_LOGIC;
    signal t_finals_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_finals_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_1_fu_417_ap_start : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_1_fu_417_ap_done : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_1_fu_417_ap_idle : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_1_fu_417_ap_ready : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_1_fu_417_t_finals_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dma_master_test_Pipeline_1_fu_417_t_finals_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_1_fu_417_t_finals_we0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_1_fu_417_t_finals_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_ap_start : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_ap_done : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_ap_idle : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_ap_ready : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_we0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_1_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_1_we0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_2_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_2_we0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_3_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_3_we0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_4_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_4_we0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_2_fu_422_buff_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_done : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_idle : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_ready : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_ce1 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_ce1 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_ce1 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_ce1 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_ce1 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_we0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_done : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_idle : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_ready : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_finals_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_finals_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_final_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_final_out_ap_vld : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_success_index_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_success_index_out_ap_vld : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_ce : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_ap_start : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_ap_done : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_ap_idle : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_ap_ready : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_1_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_2_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_3_ce0 : STD_LOGIC;
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dma_master_test_Pipeline_5_fu_468_buff_4_ce0 : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal ap_phi_mux_success_index_0_lcssa_phi_fu_396_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal success_index_0_lcssa_reg_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_final_0_lcssa_reg_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dma_master_test_Pipeline_1_fu_417_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_dma_master_test_Pipeline_2_fu_422_ap_start_reg : STD_LOGIC := '0';
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_dma_master_test_Pipeline_5_fu_468_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal zext_ln135_fu_954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_1_fu_958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_2_fu_962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_fu_976_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_1_fu_980_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln137_fu_994_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_3_fu_1008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_2_fu_1012_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln137_1_fu_1016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln31_fu_710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_480_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal grp_fu_484_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_484_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_488_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_496_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_496_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_500_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_500_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_505_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_505_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal grp_fu_509_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_513_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_513_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_517_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_521_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_521_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_525_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_525_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_535_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_535_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_539_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_543_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln130_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln130_1_fu_750_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_801_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_801_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_810_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_810_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_819_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_819_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_833_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_833_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_842_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_842_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_856_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_856_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_801_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_810_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_819_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_900_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_900_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_833_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_842_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_929_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_929_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_856_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_948_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_948_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_900_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_929_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_948_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal y_fu_1020_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_fu_1024_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln15_fu_1034_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_480_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_480_ce : STD_LOGIC;
    signal grp_fu_484_ce : STD_LOGIC;
    signal grp_fu_488_ce : STD_LOGIC;
    signal grp_fu_492_ce : STD_LOGIC;
    signal grp_fu_496_ce : STD_LOGIC;
    signal grp_fu_500_ce : STD_LOGIC;
    signal grp_fu_505_ce : STD_LOGIC;
    signal grp_fu_509_ce : STD_LOGIC;
    signal grp_fu_513_ce : STD_LOGIC;
    signal grp_fu_517_ce : STD_LOGIC;
    signal grp_fu_521_ce : STD_LOGIC;
    signal grp_fu_525_ce : STD_LOGIC;
    signal grp_fu_535_ce : STD_LOGIC;
    signal grp_fu_539_ce : STD_LOGIC;
    signal grp_fu_543_ce : STD_LOGIC;
    signal grp_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1411_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1411_ce : STD_LOGIC;
    signal grp_fu_1411_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1415_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1415_ce : STD_LOGIC;
    signal grp_fu_1415_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (94 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal grp_fu_801_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_810_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_819_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_833_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_842_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_856_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_900_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_929_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_948_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component dma_master_test_dma_master_test_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_finals_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_finals_ce0 : OUT STD_LOGIC;
        t_finals_we0 : OUT STD_LOGIC;
        t_finals_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_dma_master_test_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln31 : IN STD_LOGIC_VECTOR (61 downto 0);
        buff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_ce0 : OUT STD_LOGIC;
        buff_we0 : OUT STD_LOGIC;
        buff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_1_ce0 : OUT STD_LOGIC;
        buff_1_we0 : OUT STD_LOGIC;
        buff_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_2_ce0 : OUT STD_LOGIC;
        buff_2_we0 : OUT STD_LOGIC;
        buff_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_3_ce0 : OUT STD_LOGIC;
        buff_3_we0 : OUT STD_LOGIC;
        buff_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_4_ce0 : OUT STD_LOGIC;
        buff_4_we0 : OUT STD_LOGIC;
        buff_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_dma_master_test_Pipeline_VITIS_LOOP_43_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        trunc_ln1 : IN STD_LOGIC_VECTOR (30 downto 0);
        buff_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_4_ce0 : OUT STD_LOGIC;
        buff_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_4_ce1 : OUT STD_LOGIC;
        buff_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_ce0 : OUT STD_LOGIC;
        buff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_ce1 : OUT STD_LOGIC;
        buff_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_1_ce0 : OUT STD_LOGIC;
        buff_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_1_ce1 : OUT STD_LOGIC;
        buff_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_2_ce0 : OUT STD_LOGIC;
        buff_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_2_ce1 : OUT STD_LOGIC;
        buff_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_3_ce0 : OUT STD_LOGIC;
        buff_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_3_ce1 : OUT STD_LOGIC;
        buff_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dy : IN STD_LOGIC_VECTOR (31 downto 0);
        dx : IN STD_LOGIC_VECTOR (31 downto 0);
        dz : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp4 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp9 : IN STD_LOGIC_VECTOR (31 downto 0);
        px : IN STD_LOGIC_VECTOR (31 downto 0);
        add : IN STD_LOGIC_VECTOR (31 downto 0);
        add1 : IN STD_LOGIC_VECTOR (31 downto 0);
        py : IN STD_LOGIC_VECTOR (31 downto 0);
        add2 : IN STD_LOGIC_VECTOR (31 downto 0);
        pz : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp20 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp22 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp23 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_finals_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_finals_ce0 : OUT STD_LOGIC;
        t_finals_we0 : OUT STD_LOGIC;
        t_finals_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_480_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_480_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_480_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_480_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_480_p_ce : OUT STD_LOGIC;
        grp_fu_484_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_484_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_484_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_484_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_484_p_ce : OUT STD_LOGIC;
        grp_fu_488_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_488_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_488_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_488_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_488_p_ce : OUT STD_LOGIC;
        grp_fu_492_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_492_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_492_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_492_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_492_p_ce : OUT STD_LOGIC;
        grp_fu_496_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_496_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_496_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_496_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_496_p_ce : OUT STD_LOGIC;
        grp_fu_500_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_500_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_500_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_500_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_500_p_ce : OUT STD_LOGIC;
        grp_fu_505_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_505_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_505_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_505_p_ce : OUT STD_LOGIC;
        grp_fu_509_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_509_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_509_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_509_p_ce : OUT STD_LOGIC;
        grp_fu_513_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_513_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_513_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_513_p_ce : OUT STD_LOGIC;
        grp_fu_517_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_517_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_517_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_517_p_ce : OUT STD_LOGIC;
        grp_fu_521_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_521_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_521_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_521_p_ce : OUT STD_LOGIC;
        grp_fu_525_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_525_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_525_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_525_p_ce : OUT STD_LOGIC;
        grp_fu_535_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_535_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_535_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_535_p_ce : OUT STD_LOGIC;
        grp_fu_539_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_539_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_539_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_539_p_ce : OUT STD_LOGIC;
        grp_fu_543_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_543_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_543_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_543_p_ce : OUT STD_LOGIC;
        grp_fu_1411_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1411_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1411_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1411_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1411_p_ce : OUT STD_LOGIC;
        grp_fu_1415_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1415_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1415_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1415_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1415_p_ce : OUT STD_LOGIC );
    end component;


    component dma_master_test_dma_master_test_Pipeline_VITIS_LOOP_120_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        trunc_ln1 : IN STD_LOGIC_VECTOR (30 downto 0);
        t_finals_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_finals_ce0 : OUT STD_LOGIC;
        t_finals_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_final_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_final_out_ap_vld : OUT STD_LOGIC;
        success_index_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        success_index_out_ap_vld : OUT STD_LOGIC;
        grp_fu_1411_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1411_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1411_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1411_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1411_p_ce : OUT STD_LOGIC;
        grp_fu_1415_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1415_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1415_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1415_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1415_p_ce : OUT STD_LOGIC );
    end component;


    component dma_master_test_dma_master_test_Pipeline_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln31 : IN STD_LOGIC_VECTOR (61 downto 0);
        buff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_ce0 : OUT STD_LOGIC;
        buff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_1_ce0 : OUT STD_LOGIC;
        buff_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_2_ce0 : OUT STD_LOGIC;
        buff_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_3_ce0 : OUT STD_LOGIC;
        buff_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_4_ce0 : OUT STD_LOGIC;
        buff_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_faddfsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_sitofp_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_mul_32ns_34ns_65_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;


    component dma_master_test_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dma_master_test_buff_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_t_finals_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dma_master_test_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        arr : OUT STD_LOGIC_VECTOR (63 downto 0);
        num_quads : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component dma_master_test_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    buff_U : component dma_master_test_buff_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 103,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buff_address0,
        ce0 => buff_ce0,
        we0 => buff_we0,
        d0 => buff_d0,
        q0 => buff_q0,
        address1 => buff_address1,
        ce1 => buff_ce1,
        we1 => buff_we1,
        d1 => reg_618,
        q1 => buff_q1);

    buff_1_U : component dma_master_test_buff_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 103,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buff_1_address0,
        ce0 => buff_1_ce0,
        we0 => buff_1_we0,
        d0 => buff_1_d0,
        q0 => buff_1_q0,
        address1 => buff_1_address1,
        ce1 => buff_1_ce1,
        we1 => buff_1_we1,
        d1 => reg_656,
        q1 => buff_1_q1);

    buff_2_U : component dma_master_test_buff_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 103,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buff_2_address0,
        ce0 => buff_2_ce0,
        we0 => buff_2_we0,
        d0 => buff_2_d0,
        q0 => buff_2_q0,
        address1 => buff_2_address1,
        ce1 => buff_2_ce1,
        we1 => buff_2_we1,
        d1 => conv2_reg_1359,
        q1 => buff_2_q1);

    buff_3_U : component dma_master_test_buff_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 103,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buff_3_address0,
        ce0 => buff_3_ce0,
        we0 => buff_3_we0,
        d0 => grp_dma_master_test_Pipeline_2_fu_422_buff_3_d0,
        q0 => buff_3_q0,
        address1 => buff_3_address1,
        ce1 => buff_3_ce1,
        we1 => buff_3_we1,
        d1 => reg_680,
        q1 => buff_3_q1);

    buff_4_U : component dma_master_test_buff_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 103,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buff_4_address0,
        ce0 => buff_4_ce0,
        we0 => buff_4_we0,
        d0 => grp_dma_master_test_Pipeline_2_fu_422_buff_4_d0,
        q0 => buff_4_q0,
        address1 => buff_4_address1,
        ce1 => buff_4_ce1,
        we1 => buff_4_we1,
        d1 => reg_606,
        q1 => buff_4_q1);

    t_finals_U : component dma_master_test_t_finals_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => t_finals_address0,
        ce0 => t_finals_ce0,
        we0 => t_finals_we0,
        d0 => t_finals_d0,
        q0 => t_finals_q0);

    grp_dma_master_test_Pipeline_1_fu_417 : component dma_master_test_dma_master_test_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dma_master_test_Pipeline_1_fu_417_ap_start,
        ap_done => grp_dma_master_test_Pipeline_1_fu_417_ap_done,
        ap_idle => grp_dma_master_test_Pipeline_1_fu_417_ap_idle,
        ap_ready => grp_dma_master_test_Pipeline_1_fu_417_ap_ready,
        t_finals_address0 => grp_dma_master_test_Pipeline_1_fu_417_t_finals_address0,
        t_finals_ce0 => grp_dma_master_test_Pipeline_1_fu_417_t_finals_ce0,
        t_finals_we0 => grp_dma_master_test_Pipeline_1_fu_417_t_finals_we0,
        t_finals_d0 => grp_dma_master_test_Pipeline_1_fu_417_t_finals_d0);

    grp_dma_master_test_Pipeline_2_fu_422 : component dma_master_test_dma_master_test_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dma_master_test_Pipeline_2_fu_422_ap_start,
        ap_done => grp_dma_master_test_Pipeline_2_fu_422_ap_done,
        ap_idle => grp_dma_master_test_Pipeline_2_fu_422_ap_idle,
        ap_ready => grp_dma_master_test_Pipeline_2_fu_422_ap_ready,
        m_axi_gmem_AWVALID => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln31 => trunc_ln_reg_1067,
        buff_address0 => grp_dma_master_test_Pipeline_2_fu_422_buff_address0,
        buff_ce0 => grp_dma_master_test_Pipeline_2_fu_422_buff_ce0,
        buff_we0 => grp_dma_master_test_Pipeline_2_fu_422_buff_we0,
        buff_d0 => grp_dma_master_test_Pipeline_2_fu_422_buff_d0,
        buff_1_address0 => grp_dma_master_test_Pipeline_2_fu_422_buff_1_address0,
        buff_1_ce0 => grp_dma_master_test_Pipeline_2_fu_422_buff_1_ce0,
        buff_1_we0 => grp_dma_master_test_Pipeline_2_fu_422_buff_1_we0,
        buff_1_d0 => grp_dma_master_test_Pipeline_2_fu_422_buff_1_d0,
        buff_2_address0 => grp_dma_master_test_Pipeline_2_fu_422_buff_2_address0,
        buff_2_ce0 => grp_dma_master_test_Pipeline_2_fu_422_buff_2_ce0,
        buff_2_we0 => grp_dma_master_test_Pipeline_2_fu_422_buff_2_we0,
        buff_2_d0 => grp_dma_master_test_Pipeline_2_fu_422_buff_2_d0,
        buff_3_address0 => grp_dma_master_test_Pipeline_2_fu_422_buff_3_address0,
        buff_3_ce0 => grp_dma_master_test_Pipeline_2_fu_422_buff_3_ce0,
        buff_3_we0 => grp_dma_master_test_Pipeline_2_fu_422_buff_3_we0,
        buff_3_d0 => grp_dma_master_test_Pipeline_2_fu_422_buff_3_d0,
        buff_4_address0 => grp_dma_master_test_Pipeline_2_fu_422_buff_4_address0,
        buff_4_ce0 => grp_dma_master_test_Pipeline_2_fu_422_buff_4_ce0,
        buff_4_we0 => grp_dma_master_test_Pipeline_2_fu_422_buff_4_we0,
        buff_4_d0 => grp_dma_master_test_Pipeline_2_fu_422_buff_4_d0);

    grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434 : component dma_master_test_dma_master_test_Pipeline_VITIS_LOOP_43_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start,
        ap_done => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_done,
        ap_idle => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_idle,
        ap_ready => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_ready,
        trunc_ln1 => trunc_ln43_reg_1146,
        buff_4_address0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_address0,
        buff_4_ce0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_ce0,
        buff_4_q0 => buff_4_q0,
        buff_4_address1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_address1,
        buff_4_ce1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_ce1,
        buff_4_q1 => buff_4_q1,
        buff_address0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_address0,
        buff_ce0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_ce0,
        buff_q0 => buff_q0,
        buff_address1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_address1,
        buff_ce1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_ce1,
        buff_q1 => buff_q1,
        buff_1_address0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_address0,
        buff_1_ce0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_ce0,
        buff_1_q0 => buff_1_q0,
        buff_1_address1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_address1,
        buff_1_ce1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_ce1,
        buff_1_q1 => buff_1_q1,
        buff_2_address0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_address0,
        buff_2_ce0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_ce0,
        buff_2_q0 => buff_2_q0,
        buff_2_address1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_address1,
        buff_2_ce1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_ce1,
        buff_2_q1 => buff_2_q1,
        buff_3_address0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_address0,
        buff_3_ce0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_ce0,
        buff_3_q0 => buff_3_q0,
        buff_3_address1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_address1,
        buff_3_ce1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_ce1,
        buff_3_q1 => buff_3_q1,
        tmp1 => reg_606,
        dy => reg_596,
        dx => reg_584,
        dz => dz_reg_1109,
        tmp4 => reg_618,
        tmp9 => reg_627,
        px => reg_552,
        add => reg_656,
        add1 => reg_667,
        py => reg_563,
        add2 => reg_680,
        pz => reg_573,
        tmp20 => reg_635,
        tmp22 => reg_642,
        tmp23 => reg_649,
        t_finals_address0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_address0,
        t_finals_ce0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_ce0,
        t_finals_we0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_we0,
        t_finals_d0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_d0,
        grp_fu_480_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_din0,
        grp_fu_480_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_din1,
        grp_fu_480_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_opcode,
        grp_fu_480_p_dout0 => grp_fu_480_p2,
        grp_fu_480_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_ce,
        grp_fu_484_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_din0,
        grp_fu_484_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_din1,
        grp_fu_484_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_opcode,
        grp_fu_484_p_dout0 => grp_fu_484_p2,
        grp_fu_484_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_ce,
        grp_fu_488_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_din0,
        grp_fu_488_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_din1,
        grp_fu_488_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_opcode,
        grp_fu_488_p_dout0 => grp_fu_488_p2,
        grp_fu_488_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_ce,
        grp_fu_492_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_din0,
        grp_fu_492_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_din1,
        grp_fu_492_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_opcode,
        grp_fu_492_p_dout0 => grp_fu_492_p2,
        grp_fu_492_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_ce,
        grp_fu_496_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_din0,
        grp_fu_496_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_din1,
        grp_fu_496_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_opcode,
        grp_fu_496_p_dout0 => grp_fu_496_p2,
        grp_fu_496_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_ce,
        grp_fu_500_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_din0,
        grp_fu_500_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_din1,
        grp_fu_500_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_opcode,
        grp_fu_500_p_dout0 => grp_fu_500_p2,
        grp_fu_500_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_ce,
        grp_fu_505_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_din0,
        grp_fu_505_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_din1,
        grp_fu_505_p_dout0 => grp_fu_505_p2,
        grp_fu_505_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_ce,
        grp_fu_509_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_din0,
        grp_fu_509_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_din1,
        grp_fu_509_p_dout0 => grp_fu_509_p2,
        grp_fu_509_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_ce,
        grp_fu_513_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_din0,
        grp_fu_513_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_din1,
        grp_fu_513_p_dout0 => grp_fu_513_p2,
        grp_fu_513_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_ce,
        grp_fu_517_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_din0,
        grp_fu_517_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_din1,
        grp_fu_517_p_dout0 => grp_fu_517_p2,
        grp_fu_517_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_ce,
        grp_fu_521_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_din0,
        grp_fu_521_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_din1,
        grp_fu_521_p_dout0 => grp_fu_521_p2,
        grp_fu_521_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_ce,
        grp_fu_525_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_din0,
        grp_fu_525_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_din1,
        grp_fu_525_p_dout0 => grp_fu_525_p2,
        grp_fu_525_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_ce,
        grp_fu_535_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_din0,
        grp_fu_535_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_din1,
        grp_fu_535_p_dout0 => grp_fu_535_p2,
        grp_fu_535_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_ce,
        grp_fu_539_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_din0,
        grp_fu_539_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_din1,
        grp_fu_539_p_dout0 => grp_fu_539_p2,
        grp_fu_539_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_ce,
        grp_fu_543_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_din0,
        grp_fu_543_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_din1,
        grp_fu_543_p_dout0 => grp_fu_543_p2,
        grp_fu_543_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_ce,
        grp_fu_1411_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_din0,
        grp_fu_1411_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_din1,
        grp_fu_1411_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_opcode,
        grp_fu_1411_p_dout0 => grp_fu_1411_p2,
        grp_fu_1411_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_ce,
        grp_fu_1415_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_din0,
        grp_fu_1415_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_din1,
        grp_fu_1415_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_opcode,
        grp_fu_1415_p_dout0 => grp_fu_1415_p2,
        grp_fu_1415_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_ce);

    grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460 : component dma_master_test_dma_master_test_Pipeline_VITIS_LOOP_120_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start,
        ap_done => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_done,
        ap_idle => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_idle,
        ap_ready => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_ready,
        trunc_ln1 => trunc_ln43_reg_1146,
        t_finals_address0 => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_finals_address0,
        t_finals_ce0 => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_finals_ce0,
        t_finals_q0 => t_finals_q0,
        t_final_out => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_final_out,
        t_final_out_ap_vld => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_final_out_ap_vld,
        success_index_out => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_success_index_out,
        success_index_out_ap_vld => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_success_index_out_ap_vld,
        grp_fu_1411_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_din0,
        grp_fu_1411_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_din1,
        grp_fu_1411_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_opcode,
        grp_fu_1411_p_dout0 => grp_fu_1411_p2,
        grp_fu_1411_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_ce,
        grp_fu_1415_p_din0 => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_din0,
        grp_fu_1415_p_din1 => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_din1,
        grp_fu_1415_p_opcode => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_opcode,
        grp_fu_1415_p_dout0 => grp_fu_1415_p2,
        grp_fu_1415_p_ce => grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_ce);

    grp_dma_master_test_Pipeline_5_fu_468 : component dma_master_test_dma_master_test_Pipeline_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dma_master_test_Pipeline_5_fu_468_ap_start,
        ap_done => grp_dma_master_test_Pipeline_5_fu_468_ap_done,
        ap_idle => grp_dma_master_test_Pipeline_5_fu_468_ap_idle,
        ap_ready => grp_dma_master_test_Pipeline_5_fu_468_ap_ready,
        m_axi_gmem_AWVALID => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv32_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln31 => trunc_ln_reg_1067,
        buff_address0 => grp_dma_master_test_Pipeline_5_fu_468_buff_address0,
        buff_ce0 => grp_dma_master_test_Pipeline_5_fu_468_buff_ce0,
        buff_q0 => buff_q0,
        buff_1_address0 => grp_dma_master_test_Pipeline_5_fu_468_buff_1_address0,
        buff_1_ce0 => grp_dma_master_test_Pipeline_5_fu_468_buff_1_ce0,
        buff_1_q0 => buff_1_q0,
        buff_2_address0 => grp_dma_master_test_Pipeline_5_fu_468_buff_2_address0,
        buff_2_ce0 => grp_dma_master_test_Pipeline_5_fu_468_buff_2_ce0,
        buff_2_q0 => buff_2_q0,
        buff_3_address0 => grp_dma_master_test_Pipeline_5_fu_468_buff_3_address0,
        buff_3_ce0 => grp_dma_master_test_Pipeline_5_fu_468_buff_3_ce0,
        buff_3_q0 => buff_3_q0,
        buff_4_address0 => grp_dma_master_test_Pipeline_5_fu_468_buff_4_address0,
        buff_4_ce0 => grp_dma_master_test_Pipeline_5_fu_468_buff_4_ce0,
        buff_4_q0 => buff_4_q0);

    control_s_axi_U : component dma_master_test_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        arr => arr,
        num_quads => num_quads,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component dma_master_test_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARLEN => gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWLEN => gmem_AWLEN,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WDATA,
        I_WSTRB => grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U128 : component dma_master_test_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_480_p0,
        din1 => grp_fu_480_p1,
        opcode => grp_fu_480_opcode,
        ce => grp_fu_480_ce,
        dout => grp_fu_480_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U129 : component dma_master_test_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_484_p0,
        din1 => grp_fu_484_p1,
        ce => grp_fu_484_ce,
        dout => grp_fu_484_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U130 : component dma_master_test_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_488_p0,
        din1 => grp_fu_488_p1,
        ce => grp_fu_488_ce,
        dout => grp_fu_488_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U131 : component dma_master_test_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_492_p0,
        din1 => grp_fu_492_p1,
        ce => grp_fu_492_ce,
        dout => grp_fu_492_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U132 : component dma_master_test_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_496_p0,
        din1 => grp_fu_496_p1,
        ce => grp_fu_496_ce,
        dout => grp_fu_496_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U133 : component dma_master_test_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_500_p0,
        din1 => grp_fu_500_p1,
        ce => grp_fu_500_ce,
        dout => grp_fu_500_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U134 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_505_p0,
        din1 => grp_fu_505_p1,
        ce => grp_fu_505_ce,
        dout => grp_fu_505_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U135 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_509_p0,
        din1 => grp_fu_509_p1,
        ce => grp_fu_509_ce,
        dout => grp_fu_509_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U136 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_513_p0,
        din1 => grp_fu_513_p1,
        ce => grp_fu_513_ce,
        dout => grp_fu_513_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U137 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_517_p0,
        din1 => grp_fu_517_p1,
        ce => grp_fu_517_ce,
        dout => grp_fu_517_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U138 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_521_p0,
        din1 => grp_fu_521_p1,
        ce => grp_fu_521_ce,
        dout => grp_fu_521_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U139 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_525_p0,
        din1 => grp_fu_525_p1,
        ce => grp_fu_525_ce,
        dout => grp_fu_525_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U140 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_535_p0,
        din1 => grp_fu_535_p1,
        ce => grp_fu_535_ce,
        dout => grp_fu_535_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U141 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_539_p0,
        din1 => grp_fu_539_p1,
        ce => grp_fu_539_ce,
        dout => grp_fu_539_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U142 : component dma_master_test_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_543_p0,
        din1 => grp_fu_543_p1,
        ce => grp_fu_543_ce,
        dout => grp_fu_543_p2);

    sitofp_32ns_32_6_no_dsp_1_U143 : component dma_master_test_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => success_index_0_lcssa_reg_392,
        ce => ap_const_logic_1,
        dout => grp_fu_548_p1);

    mul_32ns_34ns_65_2_1_U144 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_801_p0,
        din1 => grp_fu_801_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_801_p2);

    mul_32ns_34ns_65_2_1_U145 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_810_p0,
        din1 => grp_fu_810_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_810_p2);

    mul_32ns_34ns_65_2_1_U146 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_819_p0,
        din1 => grp_fu_819_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_819_p2);

    mul_32ns_34ns_65_2_1_U147 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_833_p0,
        din1 => grp_fu_833_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_833_p2);

    mul_32ns_34ns_65_2_1_U148 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_842_p0,
        din1 => grp_fu_842_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_842_p2);

    mul_32ns_34ns_65_2_1_U149 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_856_p0,
        din1 => grp_fu_856_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_856_p2);

    mul_32ns_34ns_65_2_1_U150 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_900_p0,
        din1 => grp_fu_900_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_900_p2);

    mul_32ns_34ns_65_2_1_U151 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_929_p0,
        din1 => grp_fu_929_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_929_p2);

    mul_32ns_34ns_65_2_1_U152 : component dma_master_test_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_948_p0,
        din1 => grp_fu_948_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_948_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U153 : component dma_master_test_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1411_p0,
        din1 => grp_fu_1411_p1,
        ce => grp_fu_1411_ce,
        opcode => grp_fu_1411_opcode,
        dout => grp_fu_1411_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U154 : component dma_master_test_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1415_p0,
        din1 => grp_fu_1415_p1,
        ce => grp_fu_1415_ce,
        opcode => grp_fu_1415_opcode,
        dout => grp_fu_1415_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dma_master_test_Pipeline_1_fu_417_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dma_master_test_Pipeline_1_fu_417_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_dma_master_test_Pipeline_1_fu_417_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dma_master_test_Pipeline_1_fu_417_ap_ready = ap_const_logic_1)) then 
                    grp_dma_master_test_Pipeline_1_fu_417_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dma_master_test_Pipeline_2_fu_422_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dma_master_test_Pipeline_2_fu_422_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_dma_master_test_Pipeline_2_fu_422_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dma_master_test_Pipeline_2_fu_422_ap_ready = ap_const_logic_1)) then 
                    grp_dma_master_test_Pipeline_2_fu_422_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dma_master_test_Pipeline_5_fu_468_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dma_master_test_Pipeline_5_fu_468_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                    grp_dma_master_test_Pipeline_5_fu_468_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dma_master_test_Pipeline_5_fu_468_ap_ready = ap_const_logic_1)) then 
                    grp_dma_master_test_Pipeline_5_fu_468_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_ready = ap_const_logic_1)) then 
                    grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                    grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_ready = ap_const_logic_1)) then 
                    grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                reg_552 <= buff_3_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                reg_552 <= buff_3_q1;
            end if; 
        end if;
    end process;

    reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                reg_563 <= buff_4_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                reg_563 <= buff_4_q0;
            end if; 
        end if;
    end process;

    reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                reg_584 <= buff_1_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                reg_584 <= buff_1_q0;
            end if; 
        end if;
    end process;

    success_index_0_lcssa_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_fu_720_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                success_index_0_lcssa_reg_392 <= ap_const_lv32_FFFFFFFF;
            elsif (((icmp_ln43_reg_1142 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                success_index_0_lcssa_reg_392 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_success_index_out;
            end if; 
        end if;
    end process;

    t_final_0_lcssa_reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_fu_720_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                t_final_0_lcssa_reg_404 <= ap_const_lv32_49742402;
            elsif (((icmp_ln43_reg_1142 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                t_final_0_lcssa_reg_404 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_final_out;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                    add_ln135_1_reg_1168(31 downto 1) <= add_ln135_1_fu_768_p2(31 downto 1);
                    add_ln135_2_reg_1173(31 downto 1) <= add_ln135_2_fu_774_p2(31 downto 1);
                    add_ln135_reg_1163(31 downto 1) <= add_ln135_fu_762_p2(31 downto 1);
                    add_ln136_1_reg_1183(31 downto 1) <= add_ln136_1_fu_786_p2(31 downto 1);
                    add_ln136_reg_1178(31 downto 1) <= add_ln136_fu_780_p2(31 downto 1);
                    add_ln137_reg_1188(31 downto 1) <= add_ln137_fu_792_p2(31 downto 1);
                    mult_reg_1156(31 downto 1) <= mult_fu_756_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                    add_ln135_3_reg_1208(31 downto 1) <= add_ln135_3_fu_825_p2(31 downto 1);
                    add_ln136_2_reg_1223(31 downto 1) <= add_ln136_2_fu_848_p2(31 downto 1);
                    add_ln137_1_reg_1233(31 downto 1) <= add_ln137_1_fu_862_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                bitcast_ln15_reg_1404 <= bitcast_ln15_fu_1044_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                buff_1_load_1_reg_1344 <= buff_1_q0;
                buff_4_load_1_reg_1333 <= buff_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                buff_2_load_1_reg_1364 <= buff_2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                buff_load_1_reg_1349 <= buff_q1;
                conv2_reg_1359 <= grp_fu_548_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                dz_reg_1109 <= buff_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                gmem_addr_reg_1074 <= sext_ln31_fu_710_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                icmp_ln43_reg_1142 <= icmp_ln43_fu_720_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                mul42_reg_1369 <= grp_fu_535_p2;
                mul43_reg_1374 <= grp_fu_539_p2;
                mul44_reg_1379 <= grp_fu_543_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                num_quads_read_reg_1049 <= num_quads;
                trunc_ln_reg_1067 <= arr(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_573 <= buff_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_596 <= buff_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_606 <= grp_fu_505_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_618 <= grp_fu_509_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_627 <= grp_fu_513_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_635 <= grp_fu_517_p2;
                reg_642 <= grp_fu_521_p2;
                reg_649 <= grp_fu_525_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state37))) then
                reg_656 <= grp_fu_480_p2;
                reg_667 <= grp_fu_484_p2;
                reg_680 <= grp_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state60))) then
                reg_693 <= grp_fu_480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then
                sub_ln15_reg_1399 <= sub_ln15_fu_1038_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                tmp37_reg_1384 <= grp_fu_492_p2;
                tmp38_reg_1389 <= grp_fu_496_p2;
                tmp39_reg_1394 <= grp_fu_500_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                tmp_33_reg_1238 <= grp_fu_801_p2(64 downto 35);
                tmp_34_reg_1243 <= grp_fu_810_p2(64 downto 35);
                tmp_35_reg_1248 <= grp_fu_819_p2(64 downto 35);
                tmp_37_reg_1258 <= grp_fu_833_p2(64 downto 35);
                tmp_38_reg_1263 <= grp_fu_842_p2(64 downto 35);
                tmp_40_reg_1273 <= grp_fu_856_p2(64 downto 35);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                tmp_36_reg_1298 <= grp_fu_900_p2(64 downto 35);
                tmp_39_reg_1313 <= grp_fu_929_p2(64 downto 35);
                tmp_41_reg_1323 <= grp_fu_948_p2(64 downto 35);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                tmp_reg_1152 <= ap_phi_mux_success_index_0_lcssa_phi_fu_396_p4(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_fu_720_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                trunc_ln43_reg_1146 <= trunc_ln43_fu_725_p1;
            end if;
        end if;
    end process;
    mult_reg_1156(0) <= '0';
    add_ln135_reg_1163(0) <= '0';
    add_ln135_1_reg_1168(0) <= '1';
    add_ln135_2_reg_1173(0) <= '0';
    add_ln136_reg_1178(0) <= '0';
    add_ln136_1_reg_1183(0) <= '1';
    add_ln137_reg_1188(0) <= '1';
    add_ln135_3_reg_1208(0) <= '1';
    add_ln136_2_reg_1223(0) <= '0';
    add_ln137_1_reg_1233(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state88, ap_CS_fsm_state95, ap_CS_fsm_state21, icmp_ln43_fu_720_p2, tmp_fu_736_p3, ap_CS_fsm_state29, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_done, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_done, grp_dma_master_test_Pipeline_5_fu_468_ap_done, gmem_AWREADY, gmem_ARREADY, gmem_BVALID, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state90, ap_block_state10_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln43_fu_720_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((tmp_fu_736_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then
                    ap_NS_fsm <= ap_ST_fsm_state89;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                if (((grp_dma_master_test_Pipeline_5_fu_468_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state95))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state95;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln135_1_fu_768_p2 <= std_logic_vector(unsigned(mult_fu_756_p2) + unsigned(ap_const_lv32_F));
    add_ln135_2_fu_774_p2 <= std_logic_vector(unsigned(mult_fu_756_p2) + unsigned(ap_const_lv32_10));
    add_ln135_3_fu_825_p2 <= std_logic_vector(unsigned(mult_reg_1156) + unsigned(ap_const_lv32_11));
    add_ln135_fu_762_p2 <= std_logic_vector(unsigned(mult_fu_756_p2) + unsigned(ap_const_lv32_E));
    add_ln136_1_fu_786_p2 <= std_logic_vector(unsigned(mult_fu_756_p2) + unsigned(ap_const_lv32_13));
    add_ln136_2_fu_848_p2 <= std_logic_vector(unsigned(mult_reg_1156) + unsigned(ap_const_lv32_14));
    add_ln136_fu_780_p2 <= std_logic_vector(unsigned(mult_fu_756_p2) + unsigned(ap_const_lv32_12));
    add_ln137_1_fu_862_p2 <= std_logic_vector(unsigned(mult_reg_1156) + unsigned(ap_const_lv32_16));
    add_ln137_fu_792_p2 <= std_logic_vector(unsigned(mult_fu_756_p2) + unsigned(ap_const_lv32_15));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);

    ap_ST_fsm_state10_blk_assign_proc : process(ap_block_state10_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state10_on_subcall_done)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_done)
    begin
        if ((grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_done)
    begin
        if ((grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;

    ap_ST_fsm_state88_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state88_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state88_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state89_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state90_blk_assign_proc : process(grp_dma_master_test_Pipeline_5_fu_468_ap_done)
    begin
        if ((grp_dma_master_test_Pipeline_5_fu_468_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state90_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state90_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state91_blk <= ap_const_logic_0;
    ap_ST_fsm_state92_blk <= ap_const_logic_0;
    ap_ST_fsm_state93_blk <= ap_const_logic_0;
    ap_ST_fsm_state94_blk <= ap_const_logic_0;

    ap_ST_fsm_state95_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state95_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state95_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state10_on_subcall_done_assign_proc : process(grp_dma_master_test_Pipeline_1_fu_417_ap_done, grp_dma_master_test_Pipeline_2_fu_422_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((grp_dma_master_test_Pipeline_2_fu_422_ap_done = ap_const_logic_0) or (grp_dma_master_test_Pipeline_1_fu_417_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state95, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_success_index_0_lcssa_phi_fu_396_p4_assign_proc : process(icmp_ln43_reg_1142, ap_CS_fsm_state29, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_success_index_out, success_index_0_lcssa_reg_392)
    begin
        if (((icmp_ln43_reg_1142 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_phi_mux_success_index_0_lcssa_phi_fu_396_p4 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_success_index_out;
        else 
            ap_phi_mux_success_index_0_lcssa_phi_fu_396_p4 <= success_index_0_lcssa_reg_392;
        end if; 
    end process;


    ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4_assign_proc : process(icmp_ln43_reg_1142, ap_CS_fsm_state29, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_final_out, t_final_0_lcssa_reg_404)
    begin
        if (((icmp_ln43_reg_1142 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_final_out;
        else 
            ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4 <= t_final_0_lcssa_reg_404;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state95, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln15_fu_1044_p1 <= sub_ln15_reg_1399;

    buff_1_address0_assign_proc : process(ap_CS_fsm_state88, ap_CS_fsm_state11, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_2_fu_422_buff_1_address0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_address0, grp_dma_master_test_Pipeline_5_fu_468_buff_1_address0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90, zext_ln137_fu_994_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            buff_1_address0 <= ap_const_lv64_1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buff_1_address0 <= zext_ln137_fu_994_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buff_1_address0 <= ap_const_lv64_2(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_1_address0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_1_address0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_1_address0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_1_address0;
        else 
            buff_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    buff_1_address1_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_address1, ap_CS_fsm_state26, zext_ln135_2_fu_962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buff_1_address1 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buff_1_address1 <= zext_ln135_2_fu_962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_1_address1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_address1;
        else 
            buff_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    buff_1_ce0_assign_proc : process(ap_CS_fsm_state88, ap_CS_fsm_state11, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_2_fu_422_buff_1_ce0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_ce0, grp_dma_master_test_Pipeline_5_fu_468_buff_1_ce0, gmem_AWREADY, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state88)))) then 
            buff_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_1_ce0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_1_ce0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_1_ce0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_1_ce0;
        else 
            buff_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_1_ce1_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_ce1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            buff_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_1_ce1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_1_ce1;
        else 
            buff_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_1_d0_assign_proc : process(ap_CS_fsm_state88, reg_627, grp_dma_master_test_Pipeline_2_fu_422_buff_1_d0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            buff_1_d0 <= reg_627;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_1_d0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_1_d0;
        else 
            buff_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buff_1_we0_assign_proc : process(ap_CS_fsm_state88, tmp_reg_1152, grp_dma_master_test_Pipeline_2_fu_422_buff_1_we0, gmem_AWREADY, ap_CS_fsm_state10)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (tmp_reg_1152 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            buff_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_1_we0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_1_we0;
        else 
            buff_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_1_we1_assign_proc : process(ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buff_1_we1 <= ap_const_logic_1;
        else 
            buff_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_2_address0_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state11, grp_dma_master_test_Pipeline_2_fu_422_buff_2_address0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_address0, grp_dma_master_test_Pipeline_5_fu_468_buff_2_address0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90, zext_ln135_3_fu_1008_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buff_2_address0 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buff_2_address0 <= zext_ln135_3_fu_1008_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buff_2_address0 <= ap_const_lv64_2(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_2_address0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_2_address0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_2_address0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_2_address0;
        else 
            buff_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    buff_2_address1_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state39, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_address1, ap_CS_fsm_state26, zext_ln137_1_fu_1016_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            buff_2_address1 <= ap_const_lv64_1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buff_2_address1 <= zext_ln137_1_fu_1016_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_2_address1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_address1;
        else 
            buff_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    buff_2_ce0_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state11, grp_dma_master_test_Pipeline_2_fu_422_buff_2_ce0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_ce0, grp_dma_master_test_Pipeline_5_fu_468_buff_2_ce0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            buff_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_2_ce0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_2_ce0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_2_ce0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_2_ce0;
        else 
            buff_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_2_ce1_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state39, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_ce1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            buff_2_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_2_ce1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_2_ce1;
        else 
            buff_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_2_d0_assign_proc : process(ap_CS_fsm_state38, reg_667, grp_dma_master_test_Pipeline_2_fu_422_buff_2_d0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buff_2_d0 <= reg_667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_2_d0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_2_d0;
        else 
            buff_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buff_2_we0_assign_proc : process(ap_CS_fsm_state38, grp_dma_master_test_Pipeline_2_fu_422_buff_2_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buff_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_2_we0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_2_we0;
        else 
            buff_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_2_we1_assign_proc : process(ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            buff_2_we1 <= ap_const_logic_1;
        else 
            buff_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_3_address0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_2_fu_422_buff_3_address0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_address0, grp_dma_master_test_Pipeline_5_fu_468_buff_3_address0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90, zext_ln136_fu_976_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buff_3_address0 <= zext_ln136_fu_976_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buff_3_address0 <= ap_const_lv64_2(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_3_address0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_3_address0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_3_address0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_3_address0;
        else 
            buff_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    buff_3_address1_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state11, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_address1, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buff_3_address1 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buff_3_address1 <= ap_const_lv64_1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_3_address1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_address1;
        else 
            buff_3_address1 <= "XXXXXXX";
        end if; 
    end process;


    buff_3_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_2_fu_422_buff_3_ce0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_ce0, grp_dma_master_test_Pipeline_5_fu_468_buff_3_ce0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            buff_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_3_ce0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_3_ce0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_3_ce0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_3_ce0;
        else 
            buff_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_3_ce1_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state11, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_ce1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            buff_3_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_3_ce1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_3_ce1;
        else 
            buff_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_3_we0_assign_proc : process(grp_dma_master_test_Pipeline_2_fu_422_buff_3_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_3_we0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_3_we0;
        else 
            buff_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_3_we1_assign_proc : process(ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buff_3_we1 <= ap_const_logic_1;
        else 
            buff_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_4_address0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_2_fu_422_buff_4_address0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_address0, grp_dma_master_test_Pipeline_5_fu_468_buff_4_address0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90, zext_ln136_1_fu_980_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buff_4_address0 <= zext_ln136_1_fu_980_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buff_4_address0 <= ap_const_lv64_1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_4_address0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_4_address0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_4_address0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_4_address0;
        else 
            buff_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    buff_4_address1_assign_proc : process(ap_CS_fsm_state88, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_address1, ap_CS_fsm_state26, zext_ln135_fu_954_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            buff_4_address1 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buff_4_address1 <= zext_ln135_fu_954_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_4_address1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_address1;
        else 
            buff_4_address1 <= "XXXXXXX";
        end if; 
    end process;


    buff_4_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_2_fu_422_buff_4_ce0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_ce0, grp_dma_master_test_Pipeline_5_fu_468_buff_4_ce0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            buff_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_4_ce0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_4_ce0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_4_ce0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_4_ce0;
        else 
            buff_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_4_ce1_assign_proc : process(ap_CS_fsm_state88, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_ce1, gmem_AWREADY, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state88)))) then 
            buff_4_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_4_ce1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_4_ce1;
        else 
            buff_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_4_we0_assign_proc : process(grp_dma_master_test_Pipeline_2_fu_422_buff_4_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_4_we0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_4_we0;
        else 
            buff_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_4_we1_assign_proc : process(ap_CS_fsm_state88, tmp_reg_1152, gmem_AWREADY)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (tmp_reg_1152 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            buff_4_we1 <= ap_const_logic_1;
        else 
            buff_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_address0_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state29, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_2_fu_422_buff_address0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_address0, grp_dma_master_test_Pipeline_5_fu_468_buff_address0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90, zext_ln135_1_fu_958_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buff_address0 <= zext_ln135_1_fu_958_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            buff_address0 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buff_address0 <= ap_const_lv64_2(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_address0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_address0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_address0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_address0;
        else 
            buff_address0 <= "XXXXXXX";
        end if; 
    end process;


    buff_address1_assign_proc : process(ap_CS_fsm_state88, ap_CS_fsm_state37, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_address1, ap_CS_fsm_state26, zext_ln136_2_fu_1012_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            buff_address1 <= ap_const_lv64_1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buff_address1 <= zext_ln136_2_fu_1012_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_address1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_address1;
        else 
            buff_address1 <= "XXXXXXX";
        end if; 
    end process;


    buff_ce0_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state29, ap_CS_fsm_state36, grp_dma_master_test_Pipeline_2_fu_422_buff_ce0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_ce0, grp_dma_master_test_Pipeline_5_fu_468_buff_ce0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state90)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            buff_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            buff_ce0 <= grp_dma_master_test_Pipeline_5_fu_468_buff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_ce0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_ce0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_ce0;
        else 
            buff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_ce1_assign_proc : process(ap_CS_fsm_state88, ap_CS_fsm_state37, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_ce1, gmem_AWREADY, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state88)))) then 
            buff_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            buff_ce1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_buff_ce1;
        else 
            buff_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_d0_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state29, grp_dma_master_test_Pipeline_2_fu_422_buff_d0, t_final_0_lcssa_reg_404, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buff_d0 <= t_final_0_lcssa_reg_404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            buff_d0 <= ap_const_lv32_BF800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_d0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_d0;
        else 
            buff_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buff_we0_assign_proc : process(ap_CS_fsm_state37, tmp_fu_736_p3, ap_CS_fsm_state29, grp_dma_master_test_Pipeline_2_fu_422_buff_we0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or ((tmp_fu_736_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            buff_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_we0 <= grp_dma_master_test_Pipeline_2_fu_422_buff_we0;
        else 
            buff_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_we1_assign_proc : process(ap_CS_fsm_state88, tmp_reg_1152, gmem_AWREADY)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (tmp_reg_1152 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            buff_we1 <= ap_const_logic_1;
        else 
            buff_we1 <= ap_const_logic_0;
        end if; 
    end process;


    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state2, grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARADDR, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state10, sext_ln31_fu_710_p1)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARADDR <= sext_ln31_fu_710_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem_ARADDR <= grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARADDR;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARLEN_assign_proc : process(ap_CS_fsm_state2, grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARLEN, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARLEN <= ap_const_lv32_202;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem_ARLEN <= grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARLEN;
        else 
            gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state2, grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARVALID, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem_ARVALID <= grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWADDR_assign_proc : process(ap_CS_fsm_state88, gmem_addr_reg_1074, grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWADDR, gmem_AWREADY, ap_CS_fsm_state89, ap_CS_fsm_state90)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            gmem_AWADDR <= gmem_addr_reg_1074;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            gmem_AWADDR <= grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWADDR;
        else 
            gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWLEN_assign_proc : process(ap_CS_fsm_state88, grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWLEN, gmem_AWREADY, ap_CS_fsm_state89, ap_CS_fsm_state90)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            gmem_AWLEN <= ap_const_lv32_8;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            gmem_AWLEN <= grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWLEN;
        else 
            gmem_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_state88, grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWVALID, gmem_AWREADY, ap_CS_fsm_state89, ap_CS_fsm_state90)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            gmem_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            gmem_AWVALID <= grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_AWVALID;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_state95, grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_BREADY, gmem_BVALID, ap_CS_fsm_state89, ap_CS_fsm_state90)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            gmem_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            gmem_BREADY <= grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_BREADY;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_RREADY, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem_RREADY <= grp_dma_master_test_Pipeline_2_fu_422_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WVALID, ap_CS_fsm_state89, ap_CS_fsm_state90)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            gmem_WVALID <= grp_dma_master_test_Pipeline_5_fu_468_m_axi_gmem_WVALID;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_dma_master_test_Pipeline_1_fu_417_ap_start <= grp_dma_master_test_Pipeline_1_fu_417_ap_start_reg;
    grp_dma_master_test_Pipeline_2_fu_422_ap_start <= grp_dma_master_test_Pipeline_2_fu_422_ap_start_reg;
    grp_dma_master_test_Pipeline_5_fu_468_ap_start <= grp_dma_master_test_Pipeline_5_fu_468_ap_start_reg;
    grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_ap_start_reg;
    grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_ap_start_reg;

    grp_fu_1411_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_ce, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_ce, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_1411_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1411_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_ce;
        else 
            grp_fu_1411_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1411_opcode_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_opcode, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_opcode, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_1411_opcode <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1411_opcode <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_opcode;
        else 
            grp_fu_1411_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1411_p0_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_din0, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_1411_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1411_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_din0;
        else 
            grp_fu_1411_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1411_p1_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_din1, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_1411_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1411_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1411_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1411_p_din1;
        else 
            grp_fu_1411_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1415_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_ce, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_ce, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_1415_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1415_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_ce;
        else 
            grp_fu_1415_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1415_opcode_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_opcode, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_opcode, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_1415_opcode <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1415_opcode <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_opcode;
        else 
            grp_fu_1415_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1415_p0_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_din0, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_1415_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1415_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_din0;
        else 
            grp_fu_1415_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1415_p1_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_din1, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_1415_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_grp_fu_1415_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1415_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_1415_p_din1;
        else 
            grp_fu_1415_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_480_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_480_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_ce;
        else 
            grp_fu_480_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_480_opcode_assign_proc : process(ap_CS_fsm_state33, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_opcode, ap_CS_fsm_state26, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state47, ap_CS_fsm_state56, ap_CS_fsm_state61, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_480_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_fu_480_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_480_opcode <= ap_const_lv2_0;
        else 
            grp_fu_480_opcode <= "XX";
        end if; 
    end process;


    grp_fu_480_p0_assign_proc : process(reg_552, reg_596, reg_606, reg_667, reg_693, ap_CS_fsm_state33, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state47, ap_CS_fsm_state56, ap_CS_fsm_state61, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_480_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_fu_480_p0 <= ap_const_lv32_3FC00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_480_p0 <= reg_693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_480_p0 <= reg_667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_480_p0 <= reg_596;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fu_480_p0 <= reg_552;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_480_p0 <= reg_606;
        else 
            grp_fu_480_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_480_p1_assign_proc : process(reg_606, reg_618, reg_656, ap_CS_fsm_state33, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state47, ap_CS_fsm_state56, ap_CS_fsm_state61, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_480_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_480_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_480_p1 <= reg_656;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            grp_fu_480_p1 <= reg_606;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_480_p1 <= reg_618;
        else 
            grp_fu_480_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_484_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_484_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_ce;
        else 
            grp_fu_484_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_484_p0_assign_proc : process(reg_563, reg_627, ap_CS_fsm_state33, tmp37_reg_1384, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_484_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_484_p0 <= tmp37_reg_1384;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fu_484_p0 <= reg_563;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_484_p0 <= reg_627;
        else 
            grp_fu_484_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_484_p1_assign_proc : process(reg_606, reg_618, reg_635, reg_680, ap_CS_fsm_state33, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_484_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_484_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_484_p1 <= reg_680;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_484_p1 <= reg_606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fu_484_p1 <= reg_618;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_484_p1 <= reg_635;
        else 
            grp_fu_484_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_488_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_488_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_ce;
        else 
            grp_fu_488_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_488_p0_assign_proc : process(reg_573, reg_642, ap_CS_fsm_state33, buff_load_1_reg_1349, tmp39_reg_1394, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_488_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_488_p0 <= tmp39_reg_1394;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_488_p0 <= buff_load_1_reg_1349;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fu_488_p0 <= reg_573;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_488_p0 <= reg_642;
        else 
            grp_fu_488_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_488_p1_assign_proc : process(reg_627, reg_642, reg_649, ap_CS_fsm_state33, tmp38_reg_1389, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_488_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_488_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_488_p1 <= tmp38_reg_1389;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_488_p1 <= reg_642;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fu_488_p1 <= reg_627;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_488_p1 <= reg_649;
        else 
            grp_fu_488_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_492_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_492_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_ce;
        else 
            grp_fu_492_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_492_p0_assign_proc : process(reg_649, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_492_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_492_p0 <= reg_649;
        else 
            grp_fu_492_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_492_p1_assign_proc : process(reg_635, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_492_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_492_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_492_p1 <= reg_635;
        else 
            grp_fu_492_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_496_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_496_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_ce;
        else 
            grp_fu_496_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_496_p0_assign_proc : process(buff_2_load_1_reg_1364, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_496_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_496_p0 <= buff_2_load_1_reg_1364;
        else 
            grp_fu_496_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_496_p1_assign_proc : process(mul43_reg_1374, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_496_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_496_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_496_p1 <= mul43_reg_1374;
        else 
            grp_fu_496_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_500_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_500_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_ce;
        else 
            grp_fu_500_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_500_p0_assign_proc : process(mul44_reg_1379, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_500_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_500_p0 <= mul44_reg_1379;
        else 
            grp_fu_500_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_500_p1_assign_proc : process(mul42_reg_1369, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_500_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_500_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_500_p1 <= mul42_reg_1369;
        else 
            grp_fu_500_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_505_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_505_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_ce;
        else 
            grp_fu_505_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_505_p0_assign_proc : process(reg_552, reg_563, reg_584, ap_CS_fsm_state38, reg_618, reg_656, ap_CS_fsm_state21, reg_667, reg_693, ap_CS_fsm_state29, bitcast_ln15_reg_1404, ap_CS_fsm_state67, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state13, ap_CS_fsm_state52, ap_CS_fsm_state57, ap_CS_fsm_state71, ap_CS_fsm_state80, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_505_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_fu_505_p0 <= bitcast_ln15_reg_1404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_505_p0 <= reg_618;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_505_p0 <= reg_693;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_505_p0 <= reg_656;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_505_p0 <= reg_667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_505_p0 <= reg_563;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            grp_fu_505_p0 <= reg_584;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_505_p0 <= reg_552;
        else 
            grp_fu_505_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_505_p1_assign_proc : process(reg_584, reg_596, ap_CS_fsm_state38, reg_606, reg_656, ap_CS_fsm_state21, reg_667, reg_693, ap_CS_fsm_state29, ap_CS_fsm_state67, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_din1, ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4, ap_CS_fsm_state26, ap_CS_fsm_state13, ap_CS_fsm_state52, ap_CS_fsm_state57, ap_CS_fsm_state71, ap_CS_fsm_state80, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_505_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_505_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_fu_505_p1 <= reg_693;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            grp_fu_505_p1 <= reg_606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_505_p1 <= ap_const_lv32_3F000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_505_p1 <= reg_667;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_505_p1 <= reg_656;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_505_p1 <= ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_505_p1 <= reg_584;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_505_p1 <= reg_596;
        else 
            grp_fu_505_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_509_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_509_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_ce;
        else 
            grp_fu_509_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_509_p0_assign_proc : process(reg_573, reg_584, reg_596, ap_CS_fsm_state38, ap_CS_fsm_state21, reg_667, reg_680, ap_CS_fsm_state29, bitcast_ln15_fu_1044_p1, ap_CS_fsm_state67, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state13, ap_CS_fsm_state52, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_509_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_509_p0 <= reg_667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_509_p0 <= bitcast_ln15_fu_1044_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_509_p0 <= reg_680;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_509_p0 <= reg_573;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            grp_fu_509_p0 <= reg_596;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_509_p0 <= reg_584;
        else 
            grp_fu_509_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_509_p1_assign_proc : process(reg_563, reg_596, ap_CS_fsm_state38, reg_606, ap_CS_fsm_state21, reg_667, reg_680, ap_CS_fsm_state29, bitcast_ln15_fu_1044_p1, ap_CS_fsm_state67, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_din1, ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4, ap_CS_fsm_state26, ap_CS_fsm_state13, ap_CS_fsm_state52, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_509_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_509_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_509_p1 <= reg_606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_509_p1 <= bitcast_ln15_fu_1044_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_509_p1 <= reg_680;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_509_p1 <= reg_667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_509_p1 <= ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_509_p1 <= reg_596;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_509_p1 <= reg_563;
        else 
            grp_fu_509_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_513_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_513_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_ce;
        else 
            grp_fu_513_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_513_p0_assign_proc : process(reg_552, reg_584, ap_CS_fsm_state38, ap_CS_fsm_state21, reg_680, dz_reg_1109, ap_CS_fsm_state29, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state13, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_513_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_513_p0 <= reg_680;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_513_p0 <= reg_584;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            grp_fu_513_p0 <= dz_reg_1109;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_513_p0 <= reg_552;
        else 
            grp_fu_513_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_513_p1_assign_proc : process(ap_CS_fsm_state38, reg_606, ap_CS_fsm_state21, reg_680, dz_reg_1109, ap_CS_fsm_state29, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_din1, ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4, ap_CS_fsm_state26, ap_CS_fsm_state13, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_513_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_513_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_513_p1 <= reg_606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_513_p1 <= reg_680;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_513_p1 <= ap_phi_mux_t_final_0_lcssa_phi_fu_409_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_513_p1 <= dz_reg_1109;
        else 
            grp_fu_513_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_517_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_517_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_ce;
        else 
            grp_fu_517_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_517_p0_assign_proc : process(reg_552, reg_573, reg_584, ap_CS_fsm_state38, ap_CS_fsm_state21, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_517_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_517_p0 <= reg_573;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_517_p0 <= reg_552;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_517_p0 <= reg_584;
        else 
            grp_fu_517_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_517_p1_assign_proc : process(reg_573, ap_CS_fsm_state38, reg_656, ap_CS_fsm_state21, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_517_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_517_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_517_p1 <= reg_656;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_517_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_517_p1 <= reg_573;
        else 
            grp_fu_517_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_521_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_521_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_ce;
        else 
            grp_fu_521_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_521_p0_assign_proc : process(reg_552, reg_563, ap_CS_fsm_state38, ap_CS_fsm_state21, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_521_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_521_p0 <= reg_552;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_521_p0 <= reg_563;
        else 
            grp_fu_521_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_521_p1_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state21, reg_667, dz_reg_1109, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_521_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_521_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_521_p1 <= reg_667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_521_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_521_p1 <= dz_reg_1109;
        else 
            grp_fu_521_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_525_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_525_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_ce;
        else 
            grp_fu_525_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_525_p0_assign_proc : process(reg_573, reg_596, ap_CS_fsm_state38, ap_CS_fsm_state21, buff_4_load_1_reg_1333, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_din0, ap_CS_fsm_state26, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_525_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_525_p0 <= buff_4_load_1_reg_1333;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_525_p0 <= reg_573;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_525_p0 <= reg_596;
        else 
            grp_fu_525_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_525_p1_assign_proc : process(reg_573, ap_CS_fsm_state38, ap_CS_fsm_state21, reg_680, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_din1, ap_CS_fsm_state26, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_525_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_525_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_525_p1 <= reg_680;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_525_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_525_p1 <= reg_573;
        else 
            grp_fu_525_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_535_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_535_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_ce;
        else 
            grp_fu_535_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_535_p0_assign_proc : process(reg_584, ap_CS_fsm_state38, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_din0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_535_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_535_p0 <= reg_584;
        else 
            grp_fu_535_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_535_p1_assign_proc : process(ap_CS_fsm_state38, reg_656, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_din1, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_535_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_535_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_535_p1 <= reg_656;
        else 
            grp_fu_535_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_539_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_539_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_ce;
        else 
            grp_fu_539_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_539_p0_assign_proc : process(ap_CS_fsm_state38, buff_4_load_1_reg_1333, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_din0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_539_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_539_p0 <= buff_4_load_1_reg_1333;
        else 
            grp_fu_539_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_539_p1_assign_proc : process(ap_CS_fsm_state38, reg_667, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_din1, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_539_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_539_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_539_p1 <= reg_667;
        else 
            grp_fu_539_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_543_ce_assign_proc : process(grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_ce, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_543_ce <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_ce;
        else 
            grp_fu_543_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_543_p0_assign_proc : process(ap_CS_fsm_state38, buff_1_load_1_reg_1344, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_din0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_543_p0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_543_p0 <= buff_1_load_1_reg_1344;
        else 
            grp_fu_543_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_543_p1_assign_proc : process(ap_CS_fsm_state38, reg_680, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_din1, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_543_p1 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_grp_fu_543_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_543_p1 <= reg_680;
        else 
            grp_fu_543_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_801_p0 <= grp_fu_801_p00(32 - 1 downto 0);
    grp_fu_801_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_reg_1163),65));
    grp_fu_801_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    grp_fu_810_p0 <= grp_fu_810_p00(32 - 1 downto 0);
    grp_fu_810_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_1_reg_1168),65));
    grp_fu_810_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    grp_fu_819_p0 <= grp_fu_819_p00(32 - 1 downto 0);
    grp_fu_819_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_2_reg_1173),65));
    grp_fu_819_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    grp_fu_833_p0 <= grp_fu_833_p00(32 - 1 downto 0);
    grp_fu_833_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_reg_1178),65));
    grp_fu_833_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    grp_fu_842_p0 <= grp_fu_842_p00(32 - 1 downto 0);
    grp_fu_842_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_1_reg_1183),65));
    grp_fu_842_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    grp_fu_856_p0 <= grp_fu_856_p00(32 - 1 downto 0);
    grp_fu_856_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln137_reg_1188),65));
    grp_fu_856_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    grp_fu_900_p0 <= grp_fu_900_p00(32 - 1 downto 0);
    grp_fu_900_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_3_reg_1208),65));
    grp_fu_900_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    grp_fu_929_p0 <= grp_fu_929_p00(32 - 1 downto 0);
    grp_fu_929_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_2_reg_1223),65));
    grp_fu_929_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    grp_fu_948_p0 <= grp_fu_948_p00(32 - 1 downto 0);
    grp_fu_948_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln137_1_reg_1233),65));
    grp_fu_948_p1 <= ap_const_lv65_19999999A(34 - 1 downto 0);
    icmp_ln43_fu_720_p2 <= "1" when (signed(num_quads_read_reg_1049) > signed(ap_const_lv32_0)) else "0";
    lshr_ln_fu_1024_p4 <= y_fu_1020_p1(31 downto 1);
    mult_fu_756_p2 <= std_logic_vector(unsigned(shl_ln130_fu_744_p2) + unsigned(shl_ln130_1_fu_750_p2));
        sext_ln31_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_1067),64));

    shl_ln130_1_fu_750_p2 <= std_logic_vector(shift_left(unsigned(success_index_0_lcssa_reg_392),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln130_fu_744_p2 <= std_logic_vector(shift_left(unsigned(success_index_0_lcssa_reg_392),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    sub_ln15_fu_1038_p2 <= std_logic_vector(unsigned(ap_const_lv32_5F3759DF) - unsigned(zext_ln15_fu_1034_p1));

    t_finals_address0_assign_proc : process(grp_dma_master_test_Pipeline_1_fu_417_t_finals_address0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_address0, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_finals_address0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            t_finals_address0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_finals_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            t_finals_address0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            t_finals_address0 <= grp_dma_master_test_Pipeline_1_fu_417_t_finals_address0;
        else 
            t_finals_address0 <= "XXXXXX";
        end if; 
    end process;


    t_finals_ce0_assign_proc : process(grp_dma_master_test_Pipeline_1_fu_417_t_finals_ce0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_ce0, grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_finals_ce0, ap_CS_fsm_state10, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            t_finals_ce0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_120_2_fu_460_t_finals_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            t_finals_ce0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            t_finals_ce0 <= grp_dma_master_test_Pipeline_1_fu_417_t_finals_ce0;
        else 
            t_finals_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_finals_d0_assign_proc : process(grp_dma_master_test_Pipeline_1_fu_417_t_finals_d0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_d0, ap_CS_fsm_state10, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            t_finals_d0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            t_finals_d0 <= grp_dma_master_test_Pipeline_1_fu_417_t_finals_d0;
        else 
            t_finals_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    t_finals_we0_assign_proc : process(grp_dma_master_test_Pipeline_1_fu_417_t_finals_we0, grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_we0, ap_CS_fsm_state10, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            t_finals_we0 <= grp_dma_master_test_Pipeline_VITIS_LOOP_43_1_fu_434_t_finals_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            t_finals_we0 <= grp_dma_master_test_Pipeline_1_fu_417_t_finals_we0;
        else 
            t_finals_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_736_p3 <= ap_phi_mux_success_index_0_lcssa_phi_fu_396_p4(31 downto 31);
    trunc_ln43_fu_725_p1 <= num_quads_read_reg_1049(31 - 1 downto 0);
    y_fu_1020_p1 <= reg_693;
    zext_ln135_1_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_reg_1243),64));
    zext_ln135_2_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_reg_1248),64));
    zext_ln135_3_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_reg_1298),64));
    zext_ln135_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_reg_1238),64));
    zext_ln136_1_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_reg_1263),64));
    zext_ln136_2_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_reg_1313),64));
    zext_ln136_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_reg_1258),64));
    zext_ln137_1_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_reg_1323),64));
    zext_ln137_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_reg_1273),64));
    zext_ln15_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1024_p4),32));
end behav;
